<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haven.dao.StoreDAO">

	<resultMap type="com.haven.model.Store" id="StoreResult">
		<id column="storeId" jdbcType="INTEGER" property="storeId"/>
		<result column="storeName" jdbcType="VARCHAR" property="storeName"/>
		<result column="userName" jdbcType="VARCHAR" property="userName"/>
		<result column="storeSaleNum" jdbcType="INTEGER" property="storeSaleNum"/>
		<result column="storeSale" jdbcType="DOUBLE" property="storeSale"/>
		<result column="storeScore" jdbcType="INTEGER" property="storeScore"/>
		<result column="storeComment" jdbcType="INTEGER" property="storeComment"/>
		<result column="storeEvaluate" jdbcType="DOUBLE" property="storeEvaluate"/>
		<result column="storeDescript" jdbcType="VARCHAR" property="storeDescript"/>
		<result column="storeLicense" jdbcType="VARCHAR" property="storeLicense"/>
		<result column="storeState" jdbcType="VARCHAR" property="storeState"/>
		<result column="storeOpenDate" jdbcType="VARCHAR" property="storeOpenDate"/>
	</resultMap>
	
<!-- 所有列名 -->
	<sql id="allColumns">storeId, storeName, userName, storeSaleNum, storeSale, storeScore, storeComment, 
	storeEvaluate, storeDescript, storeLicense, storeState, storeOpenDate
	</sql>
	
<!-- 插入一条记录 -->
	<insert id="insert" parameterType="com.haven.model.Store" useGeneratedKeys="true" keyProperty="storeId">
	  insert into tb_Store (<include refid="allColumns"/>)
	  values(null, #{storeName}, #{userName}, #{storeSaleNum}, #{storeSale}, #{storeScore}, #{storeComment}, 
	    #{storeEvaluate}, #{storeDescript}, #{storeLicense}, #{storeState}, #{storeOpenDate})
	</insert>
	
<!-- 删除一条记录 -->
	<delete id="delete" parameterType="int">
	  delete from tb_Store where storeId = #{_parameter}
	</delete>
	
<!-- 修改店铺信息 -->
	<update id="update" parameterType="com.haven.model.Store">
	  update tb_Store 
	  <set>
	    <choose>
	      <!-- 修改店铺状态 -->
	      <when test="storeState != null and !&quot;&quot;.equals(storeState.trim())">
	        storeState = #{storeState}
	      </when>
	      <!-- 下单成功时，修改店铺的销售量和销售额 -->
	      <when test="storeSale > 0 and storeSaleNum > 0">
	        storeSale = storeSale + #{storeSale}, storeSaleNum = storeSaleNum + #{storeSaleNum}
	      </when>
	      <!-- 评价订单时，修改店铺的评分 -->
	      <when test="storeScore > 0">
	        storeComment = storeComment+1, storeScore = storeScore+#{storeScore}, storeEvaluate = (storeScore+#{storeScore})/(storeComment+1)
	      </when>
	    </choose>
	  </set>
	  where storeName = #{storeName}
	</update>
	
<!-- 查询店铺信息 -->
	<select id="getStoreInfo" parameterType="com.haven.model.Store" resultMap="StoreResult">
	  select <include refid="allColumns"/> from tb_Store
	  <where>
	    <if test="storeId > 0">
	      storeId = #{storeId}
	    </if>
	    <if test="userName != null and !&quot;&quot;.equals(userName.trim())">
	      userName = #{userName}
	    </if>
	    <if test="storeName != null and !&quot;&quot;.equals(storeName.trim())">
	      and storeName = #{storeName}
	    </if>
	  </where>
	</select>
<!-- 用户管理员查看所有店铺信息 -->
	<select id="getStoreByPage" parameterType="java.util.Map" resultMap="StoreResult">
	  select <include refid="allColumns"/> from tb_Store
	  <where>
	    <if test="store != null and store.storeName != null and !&quot;&quot;.equals(store.storeName.trim())">
	      storeName like '%' #{store.storeName, jdbcType=VARCHAR} '%'
	    </if>
	  </where>
	  order by storeId
	</select>
	
	
</mapper>